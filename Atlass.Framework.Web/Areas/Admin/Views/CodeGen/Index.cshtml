
@{
    ViewData["Title"] = "数据表管理";
    Layout = "~/Views/Shared/_Index.cshtml";
}

<div class="container-div">
    <div class="row">
        <div class="col-sm-12 search-collapse">
            <form id="searchForm">
                <div class="select-list">
                    <ul>

                        <li>
                            表名称：<input type="text" id="tableName" name="tableName">
                        </li>
                        <li>
                            <a class="btn btn-primary btn-rounded btn-sm" id="searchButton"><i class="fa fa-search"></i>&nbsp;搜索</a>
                            <a class="btn btn-warning btn-rounded btn-sm" id="resetButton"><i class="fa fa-refresh"></i>&nbsp;重置</a>
                        </li>
                    </ul>
                </div>
            </form>
        </div>
        <div class="btn-group-sm" role="group" id="toolbar">
            <a class="btn btn-info" onclick="syncAll(this);" data-id="0" data-role="system:codegen:syncall">
                <i class="fa fa-refresh"></i> 全量同步
            </a>
            <a class="btn btn-danger multiple disabled" onclick="del(this);" data-id="0" data-role="system:codegen:delete">
                <i class="fa fa-remove"></i> 删除
            </a>

        </div>
        <div class="col-sm-12 select-table table-striped">
            <table id="dataTable"></table>
        </div>

    </div>
</div>
@section scripts
{
    <script>
        var $table;
        $(function () {
            loadGrid();
        });

        function loadGrid() {
            let options = {
                url: '/admin/CodeGen/getdata',
                pageNumber: 1,                      // 初始化加载第一页，默认第一页,并记录
                pageSize: 10,                       // 每页的记录行数（*）
                pageList: "10, 25, 50, 100",        // 可供选择的每页的行数（*）
                queryParams: function (params) {
                    let p = {
                        pageNumber: params.pageNumber,
                        pageSize: params.pageSize,
                        tableName: $('#tableName').val()
                    }
                    return p;
                },
                columns: [
                    { field: 'ck', checkbox: true },
                    {
                        field: 'table_name', title: '表名称', align: 'left'
                    },
                    {
                        field: 'entity_name', title: '实体类名称', align: 'left'
                    },
                    {
                        field: 'table_type', title: '类型', align: 'left', formatter: function (v) {
                            if (v === 0) {
                                return '表';
                            }
                            if (v === 1) {
                                return '视图';
                            }
                            return '存储过程';
                        }
                    },
                    {
                        field: 'remark', title: '表描述', align: 'left'
                    },
                    {
                        field: 'sync_time', title: '首次同步', align: 'left'
                    },
                    {
                        field: 'update_time', title: '最近同步', align: 'left'
                    },
                    {
                        field: 'id', title: '操作', align: 'left'
                    }
                ]

            };
            $table = $('#dataTable').easyTable(options);
        }

        function renderResult(v, d) {
            var logTitle = 'info';
            var logClass = 'badge-info';
            switch (v) {
                case 2:
                    logTitle = 'debug';
                    logClass = 'badge-success';
                    break;
                case 3:
                    logTitle = 'warn';
                    logClass = 'badge-warning';
                    break;
                case 4:
                    logTitle = 'error';
                    logClass = 'badge-danger';
                    break;

            }
            var html = '<span class="badge ' + logClass + '">' + logTitle + '</span>';

            return html;
        }

        function renderOpts(v) {
            var html = '<a data-role="0" class="btn btn-white btn-bitbucket" title="View" href="javascript:void(0);" onclick="detail(this)" data-id="' + v + '"><i class="fa fa-eye"></i></a>';
            return html;
        }



        function detail(obj) {

            var id = $(obj).data('id');
            var url = '/admin/easylog/detail';

            jutils.dialog('日志详情', url, { id: id }, null, function () {

            });
        }

        function del() {
            var rows = $table.easyTable('selected');
            if (rows.length === 0) {
                jutils.warn('请选择数据行');
                return;
            }
            var ids = [];
            for (var i = 0; i < rows.length; i++) {

                ids.push(rows[i].id);

            }
            jutils.confirm('确认删除数据表信息吗',
                function () {
                    jutils.ajaxGet('/admin/CodeGen/RemoveAll',
                        { ids: ids.join() },
                        function () {
                            $table.easyTable('search');
                        });
                });
        }

        function syncAll() {
            jutils.confirm('确认全量同步表信息吗',
                function () {
                    jutils.ajaxGet('/admin/CodeGen/SyncAll', null,
                        function () {
                            $table.easyTable('search');
                        });
                });
        }

        function query() {
            $table.easyTable('search');
        }
    </script>
}






