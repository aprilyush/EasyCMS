//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://www.freesql.net
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Atlass.Framework.Common;
using Atlass.Framework.Models;
using Atlass.Framework.ViewModels.Common;
using Microsoft.Extensions.DependencyInjection;

namespace Atlass.Framework.Models
{


    public partial class ContentAppService
    {
        private readonly IFreeSql Sqldb;
        public ContentAppService(IServiceProvider service)
        {
            Sqldb = service.GetRequiredService<IFreeSql>();
        }


        /// <summary>
        ///获取数据列表
        /// </summary>
        /// <param name="param"></param>

        public DataTableDto GetData(DataTableDto param,int channelId)
        {
            long total = 0;
            var query = Sqldb.Select<cms_content>()
                .WhereIf(channelId>0,s=>s.channel_id==channelId)
                .OrderByDescending(s => s.is_top)
                .OrderByDescending(s=>s.id)
                .Page(param.page, param.limit)
                .Count(out total)
                .ToList();

            param.total = total;
            param.rows = query;
            return param;
        }

        /// <summary>
        ///新增数据
        /// </summary>
        /// <param name="dto"></param>

        public long Insert(cms_content dto)
        {
            long id =Sqldb.Insert(dto).ExecuteIdentity();
            return id;
        }

        /// <summary>
        ///更新数据
        /// </summary>
        /// <param name="dto"></param>

        public void Update(cms_content dto)
        {
            Sqldb.Update<cms_content>().SetSource(dto)
                .IgnoreColumns(s=>new { s.dept_id,s.insert_id,s.channel_id}).ExecuteAffrows();
        }

        /// <summary>
        ///获取单条数据
        /// </summary>
        /// <param name="id"></param>

        public cms_content GetDataById(int id)
        {
            return Sqldb.Select<cms_content>().Where(s => s.id == id).First();
        }

        /// <summary>
        ///批量删除
        /// </summary>
        /// <param name="ids"></param>

        public void DelByIds(int id)
        {

            Sqldb.Delete<cms_content>().Where(s => s.id == id).ExecuteAffrows();
        }

        /// <summary>
        /// 推荐
        /// </summary>
        /// <param name="id"></param>
        public void SetTop(string ids)
        {
            var idsArray = ids.SplitToArrayInt();
            Sqldb.Update<cms_content>().Set(s=>s.is_top,1).Where(s => idsArray.Contains(s.id)).ExecuteAffrows();
        }
        /// <summary>
        /// 推荐
        /// </summary>
        /// <param name="id"></param>
        public void SetRecomend(string ids)
        {
            var idsArray = ids.SplitToArrayInt();
            Sqldb.Update<cms_content>().Set(s => s.is_recommend, 1).Where(s => idsArray.Contains(s.id)).ExecuteAffrows();
        }
        
    }

}



